/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        List<Interval> rst = new ArrayList<Interval>();
        Collections.sort(intervals, new IntervalComparator());
        Interval prev = null;
        for(Interval it : intervals){
            if(prev != null && prev.end >= it.start){
                prev.end = Math.max(prev.end, it.end);
            }else{
                rst.add(it);
                prev = it;
            }
        }
        return rst;
    }
}

class IntervalComparator implements Comparator<Interval> { 
    public int compare(Interval t1, Interval t2){
        return t1.start - t2.start;
    }
}
