public class Solution {
    public int[] searchRange(int[] A, int target) {
        int[] result = new int[2];
        int first = lowerBound(A, target);
        if(first < A.length && A[first] == target){
            result[0] = first;
            result[1] = upperBound(A,target) - 1;
        }else{
            result[0] = -1;
            result[1] = -1;
        }
        return result;
    }
    
    private int lowerBound(int[] A, int target){
        int first = 0;
        int last = A.length;
        while(first != last){
            int mid = first + (last - first) / 2;
            if(A[mid] < target)
                first = mid + 1;
            else
                last = mid;
        }
        return first;
    }
    
    private int upperBound(int[] A, int target){
        int first = 0;
        int last = A.length;
        while(first != last){
            int mid = first + (last - first) / 2;
            if(A[mid] <= target)
                first = mid + 1;
            else
                last = mid;
        }
        return first;
    }
    
}
