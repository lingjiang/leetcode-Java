public class Solution {
    public int[] searchRange(int[] nums, int target) {
        if(nums == null || nums.length == 0)
            return new int[]{-1, -1};
        int start = lowerBound(nums, target);
        int end = upperBound(nums, target) - 1;
        if(start > end){
            start = end = -1;
        }
        return new int[]{start, end};
    }
    
    public int upperBound(int[] nums, int target){
        int start = 0;
        int end = nums.length;
        while(start < end){
            int mid = start + (end - start) / 2;
            if(nums[mid] <= target){
                start = mid + 1;
            }else{
                end = mid;
            }
        }
        return start;
    }
    
    public int lowerBound(int[] nums, int target){
        int start = 0;
        int end = nums.length;
        while(start < end){
            int mid = start + (end - start) / 2;
            if(nums[mid] < target){
                start = mid + 1;
            }else{
                end = mid;
            }
        }
        return start;
    }
}
