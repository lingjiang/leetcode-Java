public class Solution {
    public double findMedianSortedArrays(int A[], int B[]) {
        int last = A.length + B.length - 1;
        if(last % 2 == 0){
            return findKthMin(A, B, 0, 0, last / 2);
        }else{
            double a = findKthMin(A, B, 0, 0, (last + 1) / 2);
            double b = findKthMin(A, B, 0, 0, (last - 1) / 2);
            return (a + b) / 2;
        }
    }
    
    public int findKthMin(int A[], int B[], int pa, int pb, int k){
        if(A.length - pa > B.length - pb)
            return findKthMin(B, A, pb, pa, k);
        if(pa == A.length)
            return B[pb + k];
        if(k == 0)
            return Math.min(A[pa], B[pb]);
        
        int ia = Math.min(A.length - 1, pa + k / 2);
        int ib = pb + k - (ia - pa + 1);
        if(A[ia] < B[ib])
            return findKthMin(A, B, ia + 1, pb, ib - pb);
        else if(A[ia] > B[ib])
            return findKthMin(A, B, pa, ib + 1, ia - pa);
        else
            return A[ia];
    }
}
