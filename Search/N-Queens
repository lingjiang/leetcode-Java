public class Solution {
    public List<List<String>> solveNQueens(int n) {
        List<List<String>> rst = new ArrayList<List<String>>();
        List<String> list = new ArrayList<String>();
        solveNQueens(n, rst, list);
        return rst;
    }
    
    private void solveNQueens(int n, List<List<String>> rst, List<String> list){
        if(list.size() == n){
            List<String> tmp = new ArrayList<String>(list);
            rst.add(tmp);
            return;
        }
        for(int t = 0; t < n; t++){
            boolean isLegal = check(list, t);
            if(isLegal){
                StringBuilder sb = new StringBuilder();
                for(int i = 0; i < n; i++){
                    if(i == t){
                        sb.append('Q');
                    }else{
                        sb.append('.');
                    }
                }
                list.add(sb.toString());
                solveNQueens(n, rst, list);     
                list.remove(list.size() - 1);
            }
        }
    }
    
    private boolean check(List<String> list, int t){
        boolean isLegal = true;
        for(int i = 0; i < list.size(); i++){
            String s = list.get(i);
            for(int j = 0; j < s.length(); j++){
                if(s.charAt(j) == 'Q' && (j == t || Math.abs(j - t) == Math.abs(i - list.size()))){
                    isLegal = false;
                    break;
                }
            }
            if(!isLegal)
                continue;
        }
        return isLegal;
    }
}
